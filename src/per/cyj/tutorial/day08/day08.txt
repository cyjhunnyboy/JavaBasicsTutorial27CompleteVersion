1、如何制作帮助文档（了解）
    （1）写一个类
    （2）加入文档注释
    （3）通过javadoc工具生成即可
        javadoc -d 目录 -author -version ArrayTool.java

2、通过JDK提供的API学习了Math类（掌握）
    （1）API（Application Programming Interface）应用程序编程接口（帮助文档）
    （2）如何使用：如何使用帮助文档.txt
    （3）Math类：
        A：针对数学进行操作的类
        B：没有构造方法，因为它的成员都是静态的
        C：产生随机数：
            public static double random()--->[0.0, 1.0)
        D：如何产生一个1-100之间的随机数：int number = (int)(Math.random() * 100) + 1;
        E：猜字小游戏

3、代码块（理解）
    （1）用{}括起来的代码
    （2）分类
        A：局部代码块：用于限定变量的生命周期，及早释放，提供内存使用率
        B：构造代码块：把多个构造方法中相同的代码放到这里，每个构造方法执行前，首先执行构造代码块
        C：静态代码块：对类的数据进行初始化，仅仅只执行一次
    （3）静态代码块、构造代码块、构造方法的执行顺序问题？ 静态代码块-->构造代码块-->构造方法

4、继承（掌握）
    （1）把多个类中相同的成员给提取出来定义到一个独立的类中。然后让这多个类和独立的类产生一个关系，
        这多个类就具备了这些内容。这个关系叫继承。
    （2）Java中如何表示继承的呢？格式是什么？
        A：用关键字extends表示
        B：格式：
            class 子类名 extends 父类名 {}
    （3）继承的好处：
        A：提高了代码的复用性
        B：提高了代码的可维护性
        C：让类与类产生了一个关系，是多态的前提
    （4）继承的弊端：
        A：让类的耦合性增强，这样某个类的改变，就会影响其他和该类相关的类。
            原则：高内聚，低耦合
            耦合：类与类的关系
            内聚：自己完成某件事情的能力
        B：打破了封装性
    （5）Java中继承的特点
        A：Java中类只支持单继承
        B：Java中可以多层（多重）继承（继承体系）
    （6）继承的注意事项
        A：子类不能继承父类的私有成员
        B：子类不能继承父类的构造方法，但是可以通过super关键字去访问
        C：不要为了部分功能而去继承
    （7）什么时候使用继承呢?
        A：继承体现的是：is a 的关系
        B：采用假设法
    （8）Java继承中的成员关系
        A：成员变量：
            a：子类的成员变量名称和父类中的成员变量名称不一样，这个很简单
            b：子类的成员变量名称和父类中的成员变量名称一样，这个怎么办呢？
                1）子类的方法访问变量的查找顺序：
                    --在子类方法的局部范围找，有就使用
                    --在子类的成员范围找，有就使用
                    --在父类的成员范围找，有就使用
                    --找不到，就报错

        B：构造方法：
            a: 子类的构造方法默认会去访问父类的无参构造方法，是为了子类访问父类数据的初始化
            b:父类中如果没有无参构造方法，怎么办？
                1）子类通过super去明确调用带参构造方法
                2）子类通过this调用本身的其他构造，但是一定会有一个去访问了父类的构造
                3）让父类提供无参构造
        C：成员方法：
            a: 子类的成员方法和父类的成员方法名称不一样，这个很简单
            b: 子类的成员方法和父类的成员方法名称一样，这个怎么办呢？
                1）通过子类对象访问一个方法的查找顺序：
                    --在子类中查找，有就使用
                    --在父类中查找，有就使用
                    --找不到，就报错
    （9）两个面试题
        A：override和overlord的区别？overlord是否可以改变返回值类型？
        B：this和super的区别和各自的作用？
    （10）数据初始化的面试题
        A：一个类的初始化过程
        B：子父类的构造执行过程
        C：分层初始化
     (11) 案例
        A：学生和老师的案例
            继承前
            继承后
        B：猫狗案例的分析和实现